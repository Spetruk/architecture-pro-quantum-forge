#!/bin/bash
#
# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ RAG-—Å–∏—Å—Ç–µ–º—ã
# –°–æ–∑–¥–∞–µ—Ç –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –≤ –∑–Ω–∞–Ω–∏—è—Ö –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç –≤–µ–∫—Ç–æ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å
#

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –ü–û–î–ì–û–¢–û–í–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê –ü–†–û–ë–ï–õ–û–í"
echo "=============================================="

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")/.."

echo "üìç –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞: $(pwd)"
echo

# –≠—Ç–∞–ø 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–±–µ–ª–æ–≤ –≤ –∑–Ω–∞–Ω–∏—è—Ö
echo "üî• –≠—Ç–∞–ø 1: –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π..."
echo "   –£–¥–∞–ª—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏: Void Core, Xarn Velgor, Synth Flux"
echo

# –§–∏–∑–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Å—É—â–Ω–æ—Å—Ç–µ–π
echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Ü–µ–ª–µ–≤—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π..."
entities_deleted=0

if [ -f "knowledge_base/locations/Void Core.txt" ]; then
    rm "knowledge_base/locations/Void Core.txt"
    echo "   ‚úÖ –£–¥–∞–ª–µ–Ω: Void Core.txt"
    entities_deleted=$((entities_deleted + 1))
fi

if [ -f "knowledge_base/characters/Xarn Velgor.txt" ]; then
    rm "knowledge_base/characters/Xarn Velgor.txt"
    echo "   ‚úÖ –£–¥–∞–ª–µ–Ω: Xarn Velgor.txt"
    entities_deleted=$((entities_deleted + 1))
fi

if [ -f "knowledge_base/technologies/Synth Flux.txt" ]; then
    rm "knowledge_base/technologies/Synth Flux.txt"
    echo "   ‚úÖ –£–¥–∞–ª–µ–Ω: Synth Flux.txt"
    entities_deleted=$((entities_deleted + 1))
fi

echo "   üìä –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: $entities_deleted"
echo

# –£–¥–∞–ª–µ–Ω–∏–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –∏–∑ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤
echo "üîß –£–¥–∞–ª–µ–Ω–∏–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –∏–∑ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤..."
if [ -f "db_prepare/remove_entity_mentions.py" ]; then
    python3 db_prepare/remove_entity_mentions.py
    echo "‚úÖ –£–ø–æ–º–∏–Ω–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
else
    echo "‚ùå –§–∞–π–ª remove_entity_mentions.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

echo "‚úÖ –ü—Ä–æ–±–µ–ª—ã –≤ –∑–Ω–∞–Ω–∏—è—Ö —Å–æ–∑–¥–∞–Ω—ã"

echo

# –≠—Ç–∞–ø 2: –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞
echo "üóëÔ∏è  –≠—Ç–∞–ø 2: –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞..."
if [ -d "chroma_db" ]; then
    rm -rf chroma_db
    echo "‚úÖ –°—Ç–∞—Ä—ã–π –∏–Ω–¥–µ–∫—Å —É–¥–∞–ª–µ–Ω"
else
    echo "‚ö†Ô∏è  –°—Ç–∞—Ä—ã–π –∏–Ω–¥–µ–∫—Å –Ω–µ –Ω–∞–π–¥–µ–Ω (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)"
fi

echo

# –≠—Ç–∞–ø 3: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞
echo "üîç –≠—Ç–∞–ø 3: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞..."
echo "   –ò–Ω–¥–µ–∫—Å–∏—Ä—É–µ–º –±–∞–∑—É –∑–Ω–∞–Ω–∏–π —Å —Å–æ–∑–¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–±–µ–ª–∞–º–∏..."
echo

if [ -f "db_prepare/build_index.py" ]; then
    python3 db_prepare/build_index.py
    echo "‚úÖ –ù–æ–≤—ã–π –≤–µ–∫—Ç–æ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å —Å–æ–∑–¥–∞–Ω"
else
    echo "‚ùå –§–∞–π–ª build_index.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

echo

# –≠—Ç–∞–ø 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
echo "üìä –≠—Ç–∞–ø 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤..."

if [ -f "db_prepare/removed_entities.txt" ]; then
    echo "üìù –£–¥–∞–ª–µ–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏:"
    cat db_prepare/removed_entities.txt | sed 's/^/   - /'
else
    echo "‚ö†Ô∏è  –§–∞–π–ª removed_entities.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo

if [ -d "chroma_db" ]; then
    echo "‚úÖ –í–µ–∫—Ç–æ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
else
    echo "‚ùå –í–µ–∫—Ç–æ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å –Ω–µ —Å–æ–∑–¥–∞–Ω!"
    exit 1
fi

if [ -f "indexing_stats.json" ]; then
    echo "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏:"
    python3 -c "
import json
try:
    with open('indexing_stats.json', 'r', encoding='utf-8') as f:
        stats = json.load(f)
    print(f'   –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: {stats.get(\"total_documents\", \"N/A\")}')
    print(f'   –ß–∞–Ω–∫–æ–≤: {stats.get(\"total_chunks\", \"N/A\")}')
    print(f'   –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π: {stats.get(\"knowledge_base_path\", \"N/A\")}')
except:
    print('   –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É')
"
fi

echo
echo "üéØ –ü–û–î–ì–û–¢–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo "=============================================="
echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–±–µ–ª–æ–≤"
echo "üß™ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Å–∫—Ä–∏–ø—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:"
echo "   - python3 demo_knowledge_gaps.py"
echo "   - python3 coverage_analyzer.py" 
echo "   - python3 comprehensive_analysis.py"
echo
